AWSTemplateFormatVersion: '2010-09-09'
Description: A stack that creates an Aurora MySQL DB cluster in a single Availability Zone.

Parameters:
  EnvironmentName:
    Type: String
    Default: 'prod-vpc'
    Description: The name of the networking stack that this stack will build upon.
  DBInstanceClass:
    Type: String
    Description: The instance class for the Aurora MySQL instance.
    Default: 'db.t3.medium'
  DBName:
    Type: String
    Default: 'prod'
    Description: The name of the database that will be created within the Aurora MySQL cluster.
  DBUsername:
    Type: String
    Default: 'prodmoneytos'
    Description: The master user name for the Aurora MySQL cluster.
  DBEngineVersion:
    Description: The database engine version for Aurora MySQL.
    Type: String
    Default: '8.0.mysql_aurora.3.05.2'  # Updated to the specific Aurora MySQL version

Resources:

  Secret:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Name: !Ref 'DBUsername'
      GenerateSecretString:
        SecretStringTemplate: !Join ['', ['{"username": "', !Ref 'DBUsername' ,'"}']]
        GenerateStringKey: "password"
        PasswordLength: 32
        ExcludeCharacters: '"@/\'
  
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for the Aurora MySQL DB cluster
      DBSubnetGroupName: !Join ['-', [!Ref EnvironmentName, 'dbsubnetgroup', !Ref 'AWS::StackName']]
      SubnetIds:
        - Fn::ImportValue:
            !Join [ ':', [ !Ref EnvironmentName, 'PrivateSubnetOne' ] ]
        - Fn::ImportValue:
            !Join [ ':', [ !Ref EnvironmentName, 'PrivateSubnetTwo' ] ]  # Added second subnet to meet AZ coverage requirement
  
  MySQLSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Aurora MySQL DB cluster
      VpcId: 
        Fn::ImportValue:
          !Join [ ':', [ !Ref EnvironmentName, 'VPCId' ] ]
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0  # Adjust this to limit access as needed

  MySQLCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-mysql  # Set to Aurora MySQL engine
      EngineVersion: !Ref DBEngineVersion
      MasterUsername: !Ref 'DBUsername'
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref Secret, ':SecretString:password}}']]
      DBSubnetGroupName: !Ref 'DBSubnetGroup'
      VpcSecurityGroupIds:
        - !Ref MySQLSecurityGroup
      BackupRetentionPeriod: 7
      DatabaseName: !Ref 'DBName'
      EngineMode: provisioned
      Port: 3306
      StorageEncrypted: true

  MySQLInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: !Ref DBInstanceClass
      DBClusterIdentifier: !Ref MySQLCluster
      Engine: aurora-mysql  # Set to Aurora MySQL engine
      PubliclyAccessible: false

  SecretMySQLClusterAttachment:
    Type: "AWS::SecretsManager::SecretTargetAttachment"
    Properties:
      SecretId: !Ref Secret
      TargetId: !Ref MySQLCluster
      TargetType: AWS::RDS::DBCluster

Outputs:
  EndpointAddress:
    Description: Address of the Aurora MySQL cluster endpoint.
    Value: !GetAtt 'MySQLCluster.Endpoint.Address'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'EndpointAddress' ] ]
  EndpointPort:
    Description: Port of the Aurora MySQL cluster endpoint.
    Value: !GetAtt 'MySQLCluster.Endpoint.Port'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'EndpointPort' ] ]
  DBName:
    Description: The name of the database within the Aurora MySQL cluster.
    Value: !Ref DBName
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'DBName' ] ]
  Secret:
    Description: Reference to the secret containing the password for the Aurora MySQL cluster.
    Value: !Ref 'Secret'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'Secret' ] ]
